[1,["e6aW2U1KJLsLls3Mrjn4Ma@f9941","9esWn/RKJMha4hA0LCO2JA@f9941","13WWq0RzBC56uS7LviyCWK@6c48a","27cFfuoxhL/4nfEwPrjZ7O@6c48a","27s54GR6FAOJL6t7V6UbeU@6c48a","3eckI7R99JLqms/wWiatu2@6c48a","51ACADD2dCXYmu42mxiicx@6c48a","79mJZX4+NLpK9oppI2DDbX@6c48a","9esWn/RKJMha4hA0LCO2JA@6c48a","79mJZX4+NLpK9oppI2DDbX@f9941","13WWq0RzBC56uS7LviyCWK@f9941","af69G9rQRO3JZjueZWkG1Y@f9941","e1nSnavf5FQ5gbFHIZujoR@f9941","3eckI7R99JLqms/wWiatu2@f9941","27s54GR6FAOJL6t7V6UbeU@f9941","51ACADD2dCXYmu42mxiicx@f9941","27cFfuoxhL/4nfEwPrjZ7O@f9941","ednlgR+7dKKI6poTEZjxb/","af69G9rQRO3JZjueZWkG1Y@6c48a","e1nSnavf5FQ5gbFHIZujoR@6c48a","e6aW2U1KJLsLls3Mrjn4Ma@6c48a","bc6cgXJtZMn7AksPKXjAV9"],["node","_spriteFrame","_textureSource","_cameraComponent","camera","topSprite","scene","_parent","_customMaterial","_effectAsset"],["cc.SpriteFrame",["cc.Node",["_name","_layer","_id","_components","_parent","_children","_lpos","_lscale"],0,9,1,2,5,5],["cc.Sprite",["_sizeMode","_type","_isTrimmedMode","node","_spriteFrame","_color"],0,1,6,5],["252e0ifUM9LMbd+gsKdD0Cr",["outLen","radius","isShadow","node"],0,1],["cc.UITransform",["node","_contentSize"],3,1,5],["cc.SceneAsset",["_name"],2],["cc.Node",["_name","_layer","_parent","_components"],1,1,12],["cc.Node",["_name","_layer","_parent","_components","_lpos"],1,1,2,5],["cc.Canvas",["node","_cameraComponent"],3,1,1],["cc.Widget",["_alignFlags","node"],2,1],["d74fbi6g1JLJb/y5+x+EHR/",["node"],3,1],["cc.PolygonCollider2D",["node","_points"],3,1,12],["eafa3ai49ZKOZN80PqTXp9O",["node"],3,1],["945f3sjtShMTaibGreXN/d9",["node","topSprite","camera"],3,1,1,1],["cc.Camera",["_projection","_priority","_orthoHeight","_near","_far","_clearFlags","_visibility","_color"],-4,5],["240dfEgy55KrLGZGpEyWyCh",["_direction","_radius","_isShadow","node"],0,1],["cc.Scene",["_name","autoReleaseAssets","_children","_globals"],1,2,4],["cc.SceneGlobals",["ambient","shadows","_skybox","fog","octree","skin","lightProbeInfo","postSettings"],3,4,4,4,4,4,4,4,4],["cc.AmbientInfo",["_skyColorHDR","_groundAlbedoHDR"],3,5,5],["cc.ShadowsInfo",["_shadowColor","_size"],3,5,5],["cc.SkyboxInfo",[],3],["cc.FogInfo",[],3],["cc.OctreeInfo",[],3],["cc.SkinInfo",["_enabled"],2],["cc.LightProbeInfo",[],3],["cc.PostSettingsInfo",[],3],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_props","_states","_defines"],-1]],[[4,0,1,1],[10,0,1],[1,0,1,4,3,6,3],[4,0,1],[1,0,1,4,3,6,7,3],[11,0,1,1],[12,0,1],[2,3,4,1],[2,0,3,4,2],[3,1,0,3,3],[1,0,1,4,5,3,6,7,3],[1,0,1,4,5,3,6,3],[1,0,1,4,3,3],[5,0,2],[1,0,1,2,5,3,6,4],[1,0,1,4,5,3,3],[1,0,1,4,5,3,7,3],[6,0,1,2,3,3],[7,0,1,2,3,4,3],[8,0,1,1],[9,0,1,2],[2,1,0,2,3,5,4,4],[2,1,0,3,4,3],[2,0,3,5,2],[13,0,1,2,1],[14,0,1,2,3,4,5,6,7,8],[3,0,3,2],[3,1,0,2,3,4],[15,0,1,2,3,4],[16,0,1,2,3,3],[17,0,1,2,3,4,5,6,7,1],[18,0,1,1],[19,0,1,1],[20,1],[21,1],[22,1],[23,0,2],[24,1],[25,1],[26,0,1,2,4],[27,0,1,2,3,5]],[[[{"name":"ty_zwj_hcz","rect":{"x":0,"y":0,"width":365,"height":428},"offset":{"x":0,"y":0},"originalSize":{"width":365,"height":428},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-182.5,-214,0,182.5,-214,0,-182.5,214,0,182.5,214,0],"indexes":[0,1,2,2,1,3],"uv":[0,428,365,428,0,0,365,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-182.5,"y":-214,"z":0},"maxPos":{"x":182.5,"y":214,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[2]],[[{"name":"bt_1","rect":{"x":0,"y":0,"width":122,"height":122},"offset":{"x":0,"y":0},"originalSize":{"width":122,"height":122},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-61,-61,0,61,-61,0,-61,61,0,61,61,0],"indexes":[0,1,2,2,1,3],"uv":[0,122,122,122,0,0,122,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-61,"y":-61,"z":0},"maxPos":{"x":61,"y":61,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[3]],[[{"name":"ty_kt_sf4","rect":{"x":0,"y":0,"width":361,"height":164},"offset":{"x":0,"y":0},"originalSize":{"width":361,"height":164},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-180.5,-82,0,180.5,-82,0,-180.5,82,0,180.5,82,0],"indexes":[0,1,2,2,1,3],"uv":[0,164,361,164,0,0,361,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-180.5,"y":-82,"z":0},"maxPos":{"x":180.5,"y":82,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[4]],[[{"name":"os_kt_bl","rect":{"x":0,"y":0,"width":272,"height":324},"offset":{"x":0,"y":0},"originalSize":{"width":272,"height":324},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-136,-162,0,136,-162,0,-136,162,0,136,162,0],"indexes":[0,1,2,2,1,3],"uv":[0,324,272,324,0,0,272,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-136,"y":-162,"z":0},"maxPos":{"x":136,"y":162,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[5]],[[{"name":"mm_icon_star","rect":{"x":0,"y":0,"width":88,"height":84},"offset":{"x":0,"y":0},"originalSize":{"width":88,"height":84},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-44,-42,0,44,-42,0,-44,42,0,44,42,0],"indexes":[0,1,2,2,1,3],"uv":[0,84,88,84,0,0,88,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-44,"y":-42,"z":0},"maxPos":{"x":44,"y":42,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[6]],[[{"name":"cj_home_bg_02","rect":{"x":0,"y":0,"width":200,"height":200},"offset":{"x":0,"y":0},"originalSize":{"width":200,"height":200},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-100,-100,0,100,-100,0,-100,100,0,100,100,0],"indexes":[0,1,2,2,1,3],"uv":[0,200,200,200,0,0,200,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-100,"y":-100,"z":0},"maxPos":{"x":100,"y":100,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[7]],[[{"name":"ty_icon_tx","rect":{"x":0,"y":0,"width":130,"height":102},"offset":{"x":0,"y":0},"originalSize":{"width":130,"height":102},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-65,-51,0,65,-51,0,-65,51,0,65,51,0],"indexes":[0,1,2,2,1,3],"uv":[0,102,130,102,0,0,130,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-65,"y":-51,"z":0},"maxPos":{"x":65,"y":51,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[8]],[[[13,"LightScene"],[14,"Canvas",33554432,"beI88Z2HpFELqR4T5EMHpg",[-5,-6,-7,-8,-9,-10,-11],[[0,-1,[5,1280,720]],[19,-3,-2],[20,45,-4]],[1,640,360,0]],[15,"Occluder",33554432,1,[-13,-14,-15,-16,-17,-18,-19,-20],[[3,-12]]],[16,"SceneRoot",33554432,1,[-22,-23,-24,-25,-26],[[3,-21]],[1,0.6,0.6,0.6]],[10,"light3",33554432,3,[-29,-30,-31],[[0,-27,[5,89,80]],[7,-28,3]],[1,21.707,434.385,0],[1,1.6,1.6,1.6]],[10,"fire",33554432,3,[-35,-36],[[0,-32,[5,272,324]],[7,-33,4],[1,-34]],[1,543.145,-53.063,0],[1,1.6,1.6,1.6]],[2,"SpriteSplash",33554432,2,[[0,-37,[5,310,10]],[8,0,-38,6],[5,-39,[[[0,-155,5],[0,-155,-5],[0,155,-5],[0,155,5]],8,8,8,8]],[6,-40],[1,-41]],[1,-355,-108,0]],[2,"mm_icon_star",33554432,2,[[0,-42,[5,88,84]],[7,-43,7],[5,-44,[[[0,-5,42],[0,-19,20],[0,-37,18],[0,-44,12],[0,-43,1],[0,-29,-12],[0,-32,-32],[0,-29,-40],[0,-17,-42],[0,-4,-34],[0,3,-34],[0,16,-42],[0,27,-41],[0,31,-35],[0,28,-13],[0,44,5],[0,43,13],[0,39,17],[0,18,20],[0,6,41]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]],[6,-45],[1,-46]],[1,-51.551,-181.785,0]],[2,"SpriteSplash-001",33554432,2,[[0,-47,[5,50,50]],[8,0,-48,8],[5,-49,[[[0,-25,25],[0,-25,-25],[0,25,-25],[0,25,25]],8,8,8,8]],[6,-50],[1,-51]],[1,-325.82,228.539,0]],[2,"SpriteSplash-002",33554432,2,[[0,-52,[5,50,50]],[8,0,-53,9],[5,-54,[[[0,-25,25],[0,-25,-25],[0,25,-25],[0,25,25]],8,8,8,8]],[6,-55],[1,-56]],[1,-177.977,131.273,0]],[2,"SpriteSplash-003",33554432,2,[[0,-57,[5,50,50]],[8,0,-58,10],[5,-59,[[[0,-25,25],[0,-25,-25],[0,25,-25],[0,25,25]],8,8,8,8]],[6,-60],[1,-61]],[1,-569.713,16.833,0]],[2,"SpriteSplash-004",33554432,2,[[0,-62,[5,10,400]],[8,0,-63,11],[5,-64,[[[0,-5,200],[0,-5,-200],[0,5,-200],[0,5,200]],8,8,8,8]],[6,-65],[1,-66]],[1,-104.814,171.626,0]],[2,"SpriteSplash-005",33554432,2,[[0,-67,[5,200,50]],[8,0,-68,12],[5,-69,[[[0,-100,25],[0,-100,-25],[0,100,-25],[0,100,25]],8,8,8,8]],[6,-70],[1,-71]],[1,167.422,-266.227,0]],[2,"SpriteSplash-007",33554432,2,[[3,-72],[8,0,-73,13],[5,-74,[[[0,-9.016393442622949,50],[0,-18.0327868852459,47.540983606557376],[0,-31.147540983606557,40.16393442622952],[0,-42.62295081967213,27.868852459016395],[0,-47.540983606557376,18.032786885245898],[0,-50,9.016393442622956],[0,-50,-9.016393442622949],[0,-47.540983606557376,-18.0327868852459],[0,-40.16393442622951,-31.147540983606557],[0,-27.86885245901639,-42.62295081967213],[0,-18.0327868852459,-47.540983606557376],[0,-9.016393442622949,-50],[0,9.016393442622956,-50],[0,18.032786885245898,-47.540983606557376],[0,31.14754098360656,-40.16393442622951],[0,42.62295081967213,-27.86885245901639],[0,47.540983606557376,-18.0327868852459],[0,50,-9.016393442622949],[0,50,9.016393442622956],[0,47.540983606557376,18.032786885245898],[0,40.16393442622952,31.14754098360656],[0,27.868852459016395,42.62295081967213],[0,18.032786885245898,47.540983606557376],[0,9.016393442622956,50]],8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8]],[6,-75],[1,-76]],[1,16.123,-68.916,0]],[10,"light2",33554432,3,[-79,-80],[[0,-77,[5,118,115]],[7,-78,2]],[1,520.032,429.592,0],[1,1.2,1.2,1.2]],[11,"nodeMove",33554432,1,[-84],[[0,-81,[5,130,102]],[7,-82,14],[1,-83]],[1,-449.291,132.371,0]],[11,"nodeMove-扇形光源",33554432,1,[-88],[[0,-85,[5,130,102]],[7,-86,15],[1,-87]],[1,73.006,-165.627,0]],[2,"Bg",33554432,1,[[0,-89,[5,2000,900]],[21,2,0,false,-90,[4,4286111897],0],[24,-93,-92,-91]],[1,0,0,1000]],[25,0,2,621.5778251599147,0,2000,0,1108344832,[4,4278190080]],[17,"TopSprite",33554432,1,[[[0,-94,[5,1280,1362.2429906542056]],-95],4,1]],[2,"wall",33554432,3,[[0,-96,[5,1246.7933333333335,646.9133333333334]],[22,2,0,-97,1]],[1,440.8966666666667,270.3933333333333,0]],[4,"Node",33554432,14,[[3,-98],[9,20,100,-99]],[1,-28,28,0],[1,0.6249999999999999,0.6249999999999999,0.6249999999999999]],[4,"Node-001",33554432,14,[[3,-100],[9,20,100,-101]],[1,28,28,0],[1,0.6249999999999999,0.6249999999999999,0.6249999999999999]],[4,"Node",33554432,4,[[3,-102],[9,10,50,-103]],[1,-22.03,19.122,0],[1,0.6249999999999999,0.6249999999999999,0.6249999999999999]],[4,"Node-001",33554432,4,[[3,-104],[9,10,50,-105]],[1,0.726,13.27,0],[1,0.6249999999999999,0.6249999999999999,0.6249999999999999]],[4,"Node-002",33554432,4,[[3,-106],[9,10,50,-107]],[1,21.206,17.171,0],[1,0.6249999999999999,0.6249999999999999,0.6249999999999999]],[4,"Node",33554432,5,[[3,-108],[9,10,50,-109]],[1,74.211,132.684,0],[1,0.4166666666666667,0.4166666666666667,0.4166666666666667]],[4,"Node-001",33554432,5,[[3,-110],[26,200,-111]],[1,1.394,-69.324,0],[1,0.4166666666666667,0.4166666666666667,0.4166666666666667]],[4,"shafa",33554432,3,[[0,-112,[5,361,164]],[7,-113,5]],[1,-593.69,-306.297,0],[1,1.5,1.5,1.5]],[12,"Node",33554432,15,[[0,-114,[5,1,1]],[27,120,500,true,-115]]],[12,"Node",33554432,16,[[0,-116,[5,1,1]],[28,45,300,true,-117]]],[29,"LightScene",true,[1],[30,[31,[2,0,0,0,0.520833125],[2,0,0,0,0]],[32,[4,4283190348],[0,512,512]],[33],[34],[35],[36,false],[37],[38]]],[18,"Camera",33554432,1,[18],[1,0,0,1000]],[23,0,19,[4,4029689904]]],0,[0,0,1,0,3,18,0,0,1,0,0,1,0,-1,32,0,-2,17,0,-3,3,0,-4,2,0,-5,15,0,-6,19,0,-7,16,0,0,2,0,-1,6,0,-2,7,0,-3,8,0,-4,9,0,-5,10,0,-6,11,0,-7,12,0,-8,13,0,0,3,0,-1,20,0,-2,14,0,-3,4,0,-4,5,0,-5,28,0,0,4,0,0,4,0,-1,23,0,-2,24,0,-3,25,0,0,5,0,0,5,0,0,5,0,-1,26,0,-2,27,0,0,6,0,0,6,0,0,6,0,0,6,0,0,6,0,0,7,0,0,7,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,8,0,0,8,0,0,8,0,0,9,0,0,9,0,0,9,0,0,9,0,0,9,0,0,10,0,0,10,0,0,10,0,0,10,0,0,10,0,0,11,0,0,11,0,0,11,0,0,11,0,0,11,0,0,12,0,0,12,0,0,12,0,0,12,0,0,12,0,0,13,0,0,13,0,0,13,0,0,13,0,0,13,0,0,14,0,0,14,0,-1,21,0,-2,22,0,0,15,0,0,15,0,0,15,0,-1,29,0,0,16,0,0,16,0,0,16,0,-1,30,0,0,17,0,0,17,0,4,18,0,5,33,0,0,17,0,0,19,0,-2,33,0,0,20,0,0,20,0,0,21,0,0,21,0,0,22,0,0,22,0,0,23,0,0,23,0,0,24,0,0,24,0,0,25,0,0,25,0,0,26,0,0,26,0,0,27,0,0,27,0,0,28,0,0,28,0,0,29,0,0,29,0,0,30,0,0,30,0,6,31,1,7,31,18,0,32,117],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,33,33],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,8,1],[9,10,11,12,13,14,0,15,0,0,0,0,0,16,1,1,17,0]],[[{"name":"os_kt_qd","rect":{"x":0,"y":0,"width":118,"height":115},"offset":{"x":0,"y":0},"originalSize":{"width":118,"height":115},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-59,-57.5,0,59,-57.5,0,-59,57.5,0,59,57.5,0],"indexes":[0,1,2,2,1,3],"uv":[0,115,118,115,0,0,118,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-59,"y":-57.5,"z":0},"maxPos":{"x":59,"y":57.5,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[18]],[[[39,"../LightScene/effect/lightScene",[{"hash":1715685757,"name":"../LightScene/effect/lightScene|lightScene-vs:vert|lightScene-fs:frag","blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"lights","type":16,"count":30},{"name":"lightShadow","type":16,"count":30},{"name":"lightSectors","type":16,"count":60},{"name":"occluders","type":16,"count":200},{"name":"wh_ratio","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"sampleType":0,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"Constant","stageFlags":16,"binding":0,"members":[{"name":"lights","type":16,"count":30},{"name":"lightShadow","type":16,"count":30},{"name":"lightSectors","type":16,"count":60},{"name":"occluders","type":16,"count":200},{"name":"wh_ratio","type":13,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"sampleType":0,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_color;\nout vec2 v_uv;\nvec4 vert() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv = a_texCoord;\n  v_color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec2 v_uv;\nin vec4 v_color;\nuniform sampler2D mainTexture;\nlayout(std140) uniform Constant {\n  vec4 lights[30];\n  vec4 lightShadow[30];\n  vec4 lightSectors[30*2];\n  vec4 occluders[200];\n  float wh_ratio;\n};\nbool lineSegmentIntersectOptimized(vec2 p1, vec2 p2, vec2 p3, vec2 p4) {\n  if (max(p1.x, p2.x) < min(p3.x, p4.x) ||\n      max(p3.x, p4.x) < min(p1.x, p2.x) ||\n      max(p1.y, p2.y) < min(p3.y, p4.y) ||\n      max(p3.y, p4.y) < min(p1.y, p2.y)) {\n      return false;\n  }\n  vec2 a = p2 - p1;\n  vec2 b = p4 - p3;\n  vec2 c = p3 - p1;\n  float denom = a.x * b.y - a.y * b.x;\n  if (abs(denom) < 1e-6) {\n      return false;\n  }\n  float t = (c.x * b.y - c.y * b.x) / denom;\n  float u = (c.x * a.y - c.y * a.x) / denom;\n  return (t >= 0.0 && t <= 1.0 && u >= 0.0 && u <= 1.0);\n}\nbool isLightOccluder(vec2 lightPos) {\n  bool isCross = false;\n  vec2 bPos = vec2(0.0);\n  int nextNum = 0;\n  bool isLast = false;\n  for (int o_i = 0; o_i < 200; o_i++) {\n    if (o_i == nextNum) {\n      if (occluders[o_i].x <= 0.0) {\n        break;\n      }\n      isLast = occluders[o_i].y <= 0.0;\n      bPos = occluders[o_i].zw;\n      nextNum = o_i + int(occluders[o_i].x) + 1;\n    } else {\n      isCross = lineSegmentIntersectOptimized(v_uv, lightPos, occluders[o_i-1].zw, occluders[o_i].xy);\n      if (isCross) {break;}\n      if (o_i+1 != nextNum || isLast) {\n        isCross = lineSegmentIntersectOptimized(v_uv, lightPos, occluders[o_i].xy, occluders[o_i].zw);\n        if (isCross) {break;}\n      }\n      if (o_i+1 == nextNum) {\n        isCross = lineSegmentIntersectOptimized(v_uv, lightPos, isLast ? occluders[o_i].zw : occluders[o_i].xy, bPos);\n        if (isCross) {break;}\n      }\n    }\n  }\n  return isCross;\n}\nfloat sectorRadDis(vec2 d, float direction, float angle) {\n  float r_angle = radians(angle);\n  float r_direction = radians(direction);\n  float theta = atan(d.y, d.x) - 0.5*3.14159265359 + r_direction;\n  float angleToAxis = abs(mod(theta , 2.0*3.14159265359) - 3.14159265359);\n  float angularDistance = angleToAxis - r_angle/2.0;\n  return angularDistance;\n}\nvec4 frag() {\n  vec4 col = v_color;\n  for (int c_i = 0; c_i < 30; c_i++) {\n    if (lights[c_i].x <= -1.0) {\n      break;\n    }\n    vec2 v2 = v_uv - lights[c_i].xy;\n    v2.x *= wh_ratio;\n    float dis = length(v2);\n    if (dis <= (lights[c_i].z + lights[c_i].w)) {\n      bool isCross = false;\n      #if CALC_OCCLUDER\n        if (lightShadow[c_i].x > 0.5) {\n          isCross = isLightOccluder(lights[c_i].xy);\n        }\n      #endif\n      if (!isCross) {\n        if (dis <= lights[c_i].z) {\n          col.a = 0.0;\n          break;\n        } else if (lights[c_i].w > 0.0 && dis <= (lights[c_i].z + lights[c_i].w)) {\n          float t = smoothstep(0.0, 1.0, (dis - lights[c_i].z) / lights[c_i].w);\n          col.a -= (1.0-t);\n        }\n        if (col.a <= 0.0) {\n          col.a = 0.0;\n          break;\n        }\n      }\n    }\n  }\n  if (col.a <= 0.0) {\n    col.a = 0.0;\n    return col;\n  }\n  vec4 vS1;\n  vec4 vS2;\n  for (int c_i = 0; c_i < 30; c_i+=2) {\n    if (lightSectors[c_i].x <= -1.0) {\n      break;\n    }\n    vS1 = lightSectors[c_i];\n    vS2 = lightSectors[c_i+1];\n    vec2 v2 = v_uv - vS1.xy;\n    v2.x *= wh_ratio;\n    float dis = length(v2);\n    float radDis2 = sectorRadDis(v2, vS1.z, vS2.z + vS2.w);\n    if (dis <= (vS2.x + vS2.y) && radDis2 <= 0.0) {\n      bool isCross = false;\n      #if CALC_OCCLUDER\n        if (vS1.w > 0.5) {\n          isCross = isLightOccluder(vS1.xy);\n        }\n      #endif\n      if (!isCross) {\n        float radDis = sectorRadDis(v2, vS1.z, vS2.z);\n        if (radDis <= 0.0) {\n          if (dis <= vS2.x) {\n            col.a = 0.0;\n          } else if (dis <= (vS2.x + vS2.y)) {\n            col.a -= smoothstep(1.0, 0.0, (dis - vS2.x) / vS2.y);\n          }\n        } else {\n          if (radDis2 <= 0.0) {\n            float a1 = smoothstep(0.0, 1.0, -radDis2 / (radDis -radDis2));\n            if (dis <= vS2.x) {\n              col.a -= a1;\n            } else if (dis <= (vS2.x + vS2.y)) {\n              float a2 = smoothstep(1.0, 0.0, (dis - vS2.x) / vS2.y);\n              col.a -= min(a1, a2);\n            }\n          }\n        }\n        if (col.a <= 0.0) {\n          col.a = 0.0;\n          return col;\n        }\n      }\n    }\n  }\n  return col;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_color;\nvarying vec2 v_uv;\nvec4 vert() {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * pos;\n  v_uv = a_texCoord;\n  v_color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvarying vec2 v_uv;\nvarying vec4 v_color;\nuniform sampler2D mainTexture;\n    uniform vec4 lights[30];\n    uniform vec4 lightShadow[30];\n    uniform vec4 lightSectors[60];\n    uniform vec4 occluders[200];\n    uniform float wh_ratio;\nbool lineSegmentIntersectOptimized(vec2 p1, vec2 p2, vec2 p3, vec2 p4) {\n  if (max(p1.x, p2.x) < min(p3.x, p4.x) ||\n      max(p3.x, p4.x) < min(p1.x, p2.x) ||\n      max(p1.y, p2.y) < min(p3.y, p4.y) ||\n      max(p3.y, p4.y) < min(p1.y, p2.y)) {\n      return false;\n  }\n  vec2 a = p2 - p1;\n  vec2 b = p4 - p3;\n  vec2 c = p3 - p1;\n  float denom = a.x * b.y - a.y * b.x;\n  if (abs(denom) < 1e-6) {\n      return false;\n  }\n  float t = (c.x * b.y - c.y * b.x) / denom;\n  float u = (c.x * a.y - c.y * a.x) / denom;\n  return (t >= 0.0 && t <= 1.0 && u >= 0.0 && u <= 1.0);\n}\nbool isLightOccluder(vec2 lightPos) {\n  bool isCross = false;\n  vec2 bPos = vec2(0.0);\n  int nextNum = 0;\n  bool isLast = false;\n  for (int o_i = 0; o_i < 200; o_i++) {\n    if (o_i == nextNum) {\n      if (occluders[o_i].x <= 0.0) {\n        break;\n      }\n      isLast = occluders[o_i].y <= 0.0;\n      bPos = occluders[o_i].zw;\n      nextNum = o_i + int(occluders[o_i].x) + 1;\n    } else {\n      isCross = lineSegmentIntersectOptimized(v_uv, lightPos, occluders[o_i-1].zw, occluders[o_i].xy);\n      if (isCross) {break;}\n      if (o_i+1 != nextNum || isLast) {\n        isCross = lineSegmentIntersectOptimized(v_uv, lightPos, occluders[o_i].xy, occluders[o_i].zw);\n        if (isCross) {break;}\n      }\n      if (o_i+1 == nextNum) {\n        isCross = lineSegmentIntersectOptimized(v_uv, lightPos, isLast ? occluders[o_i].zw : occluders[o_i].xy, bPos);\n        if (isCross) {break;}\n      }\n    }\n  }\n  return isCross;\n}\nfloat sectorRadDis(vec2 d, float direction, float angle) {\n  float r_angle = radians(angle);\n  float r_direction = radians(direction);\n  float theta = atan(d.y, d.x) - 0.5*3.14159265359 + r_direction;\n  float angleToAxis = abs(mod(theta , 2.0*3.14159265359) - 3.14159265359);\n  float angularDistance = angleToAxis - r_angle/2.0;\n  return angularDistance;\n}\nvec4 frag() {\n  vec4 col = v_color;\n  for (int c_i = 0; c_i < 30; c_i++) {\n    if (lights[c_i].x <= -1.0) {\n      break;\n    }\n    vec2 v2 = v_uv - lights[c_i].xy;\n    v2.x *= wh_ratio;\n    float dis = length(v2);\n    if (dis <= (lights[c_i].z + lights[c_i].w)) {\n      bool isCross = false;\n      #if CALC_OCCLUDER\n        if (lightShadow[c_i].x > 0.5) {\n          isCross = isLightOccluder(lights[c_i].xy);\n        }\n      #endif\n      if (!isCross) {\n        if (dis <= lights[c_i].z) {\n          col.a = 0.0;\n          break;\n        } else if (lights[c_i].w > 0.0 && dis <= (lights[c_i].z + lights[c_i].w)) {\n          float t = smoothstep(0.0, 1.0, (dis - lights[c_i].z) / lights[c_i].w);\n          col.a -= (1.0-t);\n        }\n        if (col.a <= 0.0) {\n          col.a = 0.0;\n          break;\n        }\n      }\n    }\n  }\n  if (col.a <= 0.0) {\n    col.a = 0.0;\n    return col;\n  }\n  vec4 vS1;\n  vec4 vS2;\n  for (int c_i = 0; c_i < 30; c_i+=2) {\n    if (lightSectors[c_i].x <= -1.0) {\n      break;\n    }\n    vS1 = lightSectors[c_i];\n    vS2 = lightSectors[c_i+1];\n    vec2 v2 = v_uv - vS1.xy;\n    v2.x *= wh_ratio;\n    float dis = length(v2);\n    float radDis2 = sectorRadDis(v2, vS1.z, vS2.z + vS2.w);\n    if (dis <= (vS2.x + vS2.y) && radDis2 <= 0.0) {\n      bool isCross = false;\n      #if CALC_OCCLUDER\n        if (vS1.w > 0.5) {\n          isCross = isLightOccluder(vS1.xy);\n        }\n      #endif\n      if (!isCross) {\n        float radDis = sectorRadDis(v2, vS1.z, vS2.z);\n        if (radDis <= 0.0) {\n          if (dis <= vS2.x) {\n            col.a = 0.0;\n          } else if (dis <= (vS2.x + vS2.y)) {\n            col.a -= smoothstep(1.0, 0.0, (dis - vS2.x) / vS2.y);\n          }\n        } else {\n          if (radDis2 <= 0.0) {\n            float a1 = smoothstep(0.0, 1.0, -radDis2 / (radDis -radDis2));\n            if (dis <= vS2.x) {\n              col.a -= a1;\n            } else if (dis <= (vS2.x + vS2.y)) {\n              float a2 = smoothstep(1.0, 0.0, (dis - vS2.x) / vS2.y);\n              col.a -= min(a1, a2);\n            }\n          }\n        }\n        if (col.a <= 0.0) {\n          col.a = 0.0;\n          return col;\n        }\n      }\n    }\n  }\n  return col;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[],"samplerTextures":[],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":42,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":363}},"defines":[{"name":"CALC_OCCLUDER","type":"boolean"}]}],[{"passes":[{"program":"../LightScene/effect/lightScene|lightScene-vs:vert|lightScene-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"wh_ratio":{"type":13,"value":[2.22222]},"lights":{"type":16,"value":[-1,0.5,0.1,0.05]},"lightSectors":{"type":16,"value":[-1,0.5,0.1,0.05]},"occluders":{"type":16,"value":[0,0,0,0]},"lightShadow":{"type":16,"value":[0,0,0,0]}}}]}]]],0,0,[],[],[]],[[{"name":"os_zwj_qd","rect":{"x":0,"y":0,"width":89,"height":80},"offset":{"x":0,"y":0},"originalSize":{"width":89,"height":80},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-44.5,-40,0,44.5,-40,0,-44.5,40,0,44.5,40,0],"indexes":[0,1,2,2,1,3],"uv":[0,80,89,80,0,0,89,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-44.5,"y":-40,"z":0},"maxPos":{"x":44.5,"y":40,"z":0}},"packable":true,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[19]],[[{"name":"bgRect","rect":{"x":0,"y":0,"width":30,"height":30},"offset":{"x":0,"y":0},"originalSize":{"width":30,"height":30},"rotated":false,"capInsets":[0,0,0,0],"vertices":{"rawPosition":[-15,-15,0,15,-15,0,-15,15,0,15,15,0],"indexes":[0,1,2,2,1,3],"uv":[0,30,30,30,0,0,30,0],"nuv":[0,0,1,0,0,1,1,1],"minPos":{"x":-15,"y":-15,"z":0},"maxPos":{"x":15,"y":15,"z":0}},"packable":false,"pixelsToUnit":100,"pivot":{"x":0.5,"y":0.5},"meshType":0}],[0],0,[0],[2],[20]],[[[40,"lightScene",[{"lights":[],"occluders":[]}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"CALC_OCCLUDER":true}]]],0,0,[0],[9],[21]]]]
